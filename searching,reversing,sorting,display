#include <stdio.h>
#include <malloc.h>
int arr[9];
void inputData();
void printData();
int search(int);
void sorting();
void reversing();
void main()
{
    int choice, var;
    inputData();
    do
    {
        printf("\nMain Menu");
        printf(" 1.Display");
        printf(" 2.Search");
        printf(" 3.Sorting");
        printf("4. Reversing");
        printf("5. Exit");
        printf("\nEnter your choice:");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            printData();
            break;
        case 2:
            printf("\nEnter the value to be searched: ");
            scanf("%d", &var);
            int i;
            i = search(var);
            if (i == -1)
            {
                printf("\nElement is not found in an array");
            }
            else
            {
                printf("\nElement is found at position:%d", i + 1);
            }
            break;
        case 3:
            sorting();
            break;
        case 4:
            reversing();
            break;
        case 5:
            break;
        }
    } while (choice != 5);
}
void inputData()
{
    int i;
    for (i = 0; i <= 8; i++)
    {
        printf("enter the %dth element :", i);
        scanf("%d", &arr[i]);
    }
}
void printData()
{
    int i;
    printf("Elements of array");
    for (i = 0; i <= 8; i++)
    {
        printf(" %d ", arr[i]);
    }
}
int search(int var)
{
    int i;
    for (i = 0; i <= 8; i++)
    {
        if (arr[i] == var)
        {
            return i;
        }
    }
    if (i == 9)
    {
        return -1;
    }
}
void sorting()
{
    int i, j, temp;
    for (i = 0; i <= 8; i++)
    {
        for (j = 0; j <= 8 - i - 1; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}
void reversing()
{
    int i = 0, j = 8, temp;
    while (i < j)
    {
        temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
        i++;
        j--;
    }
}
