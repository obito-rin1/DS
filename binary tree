#include<stdio.h>
#include<stdlib.h>
struct Node {
int data;
struct Node * leftChild;
struct Node * rightChild;
};
struct Node * createNode(struct Node * root,int data){
struct Node * newNode=(struct Node *)malloc(sizeof(struct Node));
newNode->data=data;
newNode->leftChild=NULL;
newNode->rightChild=NULL;
return newNode;
}
//function to insert a new node into the binary tree
struct Node * insert(struct Node * root ,int data){
if (root==NULL){
return createNode(root ,data);
}
if (data<root->data){
root->leftChild=insert(root->leftChild,data);
}
else {
root->rightChild=insert(root->rightChild,data);
}
return root;
}
// function for inorder traversing
void inorderTraversal(struct Node * root){
if(root){
inorderTraversal(root->leftChild);
printf(" %d ",root->data);
inorderTraversal(root->rightChild);
}
}
//main function
int main (){
struct Node * root =NULL;
   int values[]={5,3,8,1,4,7,9};

  int n =sizeof(values)/sizeof(values[0]);
  
  for (int i =0 ;i <n;i++){
  
   root =insert(root,values[i]);
 }

